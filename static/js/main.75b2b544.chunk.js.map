{"version":3,"sources":["components/Movie.js","components/WatchList.js","components/Collection.js","components/CollectionClearPage.js","components/Home.js","App.js","index.js"],"names":["Movie","_ref","movie","toggleWatched","removeMovie","url","concat","name","react_default","a","createElement","style","display","justifyContent","id","type","checked","watched","onChange","href","target","rel","onClick","error","console","log","backgroundColor","color","border","cursor","marginLeft","WatchList","movies","Object","keys","length","alignItems","fontSize","map","key","Collection","navigate","useNavigate","_useState","useState","_useState2","slicedToArray","collectedMovies","setCollectedMovies","initialDarkMode","JSON","parse","localStorage","getItem","_useState3","_useState4","darkMode","setDarkMode","useEffect","collectedMovieList","prevCollectedMovies","toConsumableArray","setItem","stringify","document","body","className","prevDarkMode","newCollection","find","filter","class","CollectionClearPage","removeItem","Home","setMovies","movieNameRef","useRef","addMovie","e","current","value","prevMovies","uuidv4","storedMovies","keyDownHandler","event","preventDefault","addEventListener","removeEventListener","Fragment","newMovies","ref","placeholder","watchedMovies","existingCollectedMovies","updatedCollectedMovies","App","content","dist","react_router_dist","exact","path","element","components_Home","components_Collection","components_CollectionClearPage","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"0MAGe,SAASA,EAATC,GAAsD,IAArCC,EAAqCD,EAArCC,MAAOC,EAA8BF,EAA9BE,cAAeC,EAAeH,EAAfG,YAclD,IACIC,EADa,kCACIC,OAAOJ,EAAMK,KAAM,UAExC,OACAC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAACC,QAAS,OAAQC,eAAgB,WAC1CL,EAAAC,EAAAC,cAAA,SAAOI,GAAG,eACNN,EAAAC,EAAAC,cAAA,SACII,GAAG,cACHC,KAAK,WACLC,QAASd,EAAMe,QACfC,SAvBZ,WACIf,EAAcD,EAAMY,OAwBhBN,EAAAC,EAAAC,cAAA,KACIS,KAAMd,EACNe,OAAO,SACPC,IAAI,uBACCnB,EAAMK,MAEfC,EAAAC,EAAAC,cAAA,UACIY,QA5BZ,WACI,IACIlB,EAAYF,EAAMY,IACpB,MAAOS,GACLC,QAAQC,IAAIF,KAyBRZ,MAAO,CACHe,gBAAiB,MACjBC,MAAO,QACPC,OAAQ,OACRC,OAAQ,UACRC,WAAY,SAPpB,OC/BG,SAASC,EAAT9B,GAA2D,IAAtC+B,EAAsC/B,EAAtC+B,OAAQ7B,EAA8BF,EAA9BE,cAAeC,EAAeH,EAAfG,YAEzD,OAAkC,IAA/B6B,OAAOC,KAAKF,GAAQG,OAEnB3B,EAAAC,EAAAC,cAAA,OACAC,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBuB,WAAY,SACZC,SAAU,KALZ,iCASE7B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YAMJsB,EAAOM,IAAI,SAAApC,GACP,OAAOM,EAAAC,EAAAC,cAACV,EAAD,CACLuC,IAAKrC,EAAMY,GACXX,cAAeA,EACfC,YAAaA,EACbF,MAAOA,MCxBjB,IAuFesC,EAvFI,WACjB,IAAMC,EAAWC,cADMC,EAIuBC,mBAAS,IAJhCC,EAAAZ,OAAAa,EAAA,EAAAb,CAAAU,EAAA,GAIhBI,EAJgBF,EAAA,GAICG,EAJDH,EAAA,GAKjBI,EAAkBC,KAAKC,MAAMC,aAAaC,QAH1B,eAGqD,EALpDC,EAMSV,mBAASK,GANlBM,EAAAtB,OAAAa,EAAA,EAAAb,CAAAqB,EAAA,GAMhBE,EANgBD,EAAA,GAMNE,EANMF,EAAA,GAiDvB,OAzCAG,oBAAU,WACR,IAAMC,EAAqBT,KAAKC,MAAMC,aAAaC,QAAQ,oBACvDM,GAAoBX,EAAmB,SAAAY,GAAmB,SAAAtD,OAAA2B,OAAA4B,EAAA,EAAA5B,CAAQ2B,GAAR3B,OAAA4B,EAAA,EAAA5B,CAAgC0B,MAG9F,IAAMV,EAAkBC,KAAKC,MAAMC,aAAaC,QAX5B,eAWuD,EAC3EI,EAAYR,IACX,IAEHS,oBAAU,WACRN,aAAaU,QAAQ,kBAAmBZ,KAAKa,UAAUhB,KACtD,CAACA,IAEJW,oBAAU,WAOR,OANAM,SAASC,KAAKtD,MAAMe,gBAAkB8B,EAAW,UAAY,UAG7DJ,aAAaU,QAvBO,WAuBgBZ,KAAKa,UAAUP,IAG5C,WACLQ,SAASC,KAAKtD,MAAMe,gBAAkB,KAEvC,CAAC8B,IAmBFhD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIwD,UAAS,GAAA5D,OAAKkD,EAAW,eAAiB,kBAA9C,qBACAhD,EAAAC,EAAAC,cAAA,UAAQwD,UAAU,iBAAiB5C,QAPzC,WACEmC,EAAY,SAAAU,GAAY,OAAKA,MAMzB,oBAGA3D,EAAAC,EAAAC,cAAA,OAAKwD,UAAS,GAAA5D,OAAKkD,EAAW,oBAAsB,uBAAyBT,EAAgBZ,OAA7F,mBACA3B,EAAAC,EAAAC,cAAA,OAAKwD,UAAS,sBAAA5D,OAAwBkD,EAAW,YAAc,eAE3DhD,EAAAC,EAAAC,cAACqB,EAAD,CACEmC,UAAU,YACVlC,OAAQe,EACR5C,cA5BZ,SAAuBW,GACrB,IAAMsD,EAAanC,OAAA4B,EAAA,EAAA5B,CAAOc,GACpB7C,EAAQkE,EAAcC,KAAK,SAAAnE,GAAK,OAAIA,EAAMY,KAAOA,IACvDZ,EAAMe,SAAWf,EAAMe,QACvB+B,EAAmBoB,IAyBThE,YAtBZ,SAAqBU,GACnB,IAAMsD,EAAgBrB,EAAgBuB,OAAO,SAACpE,GAAD,OAAWA,EAAMY,KAAOA,IACrEkC,EAAmBoB,OAyBf5D,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQ6D,MAAM,qBAAqBjD,QAAS,kBAAImB,EAAS,aACrDjC,EAAAC,EAAAC,cAAA,QAAM6D,MAAM,qBACZ/D,EAAAC,EAAAC,cAAA,QAAM6D,MAAM,mBACZ/D,EAAAC,EAAAC,cAAA,QAAM6D,MAAM,wBAAZ,4BAIJ/D,EAAAC,EAAAC,cAAA,UAAQ6D,MAAM,qBAAqBjD,QAAS,kBAAImB,EAAS,OACrDjC,EAAAC,EAAAC,cAAA,QAAM6D,MAAM,qBACZ/D,EAAAC,EAAAC,cAAA,QAAM6D,MAAM,mBACZ/D,EAAAC,EAAAC,cAAA,QAAM6D,MAAM,wBAAZ,WC5BGC,EApDa,WACxB,IAAM/B,EAAWC,cAGXO,EAAkBC,KAAKC,MAAMC,aAAaC,QAF1B,eAEqD,EAJ7CV,EAMXC,mBAASK,GAArBO,EANuBvB,OAAAa,EAAA,EAAAb,CAAAU,EAAA,MA+B9B,OAvBAe,oBAAU,WAQN,OANAM,SAASC,KAAKtD,MAAMe,gBAAkB8B,EAAW,UAAY,UAG7DJ,aAAaU,QAXK,WAWkBZ,KAAKa,UAAUP,IAG5C,WACHQ,SAASC,KAAKtD,MAAMe,gBAAkB,KAE3C,CAAC8B,IAaAhD,EAAAC,EAAAC,cAAA,OAAKwD,UAAS,cAAA5D,OAAgBkD,EAAW,kBAAoB,qBACzDhD,EAAAC,EAAAC,cAAA,+DACAF,EAAAC,EAAAC,cAAA,UAAQ6D,MAAM,qBAAqBjD,QAb3C,WAEI8B,aAAaqB,WAAW,mBACxBhC,EAAS,iBAWDjC,EAAAC,EAAAC,cAAA,QAAM6D,MAAM,qBACZ/D,EAAAC,EAAAC,cAAA,QAAM6D,MAAM,mBACZ/D,EAAAC,EAAAC,cAAA,QAAM6D,MAAM,wBAAZ,QAIJ/D,EAAAC,EAAAC,cAAA,UAAQ6D,MAAM,qBAAqBjD,QAd3C,WACImB,EAAS,iBAcDjC,EAAAC,EAAAC,cAAA,QAAM6D,MAAM,qBACZ/D,EAAAC,EAAAC,cAAA,QAAM6D,MAAM,mBACZ/D,EAAAC,EAAAC,cAAA,QAAM6D,MAAM,wBAAZ,iBCwGDG,EAlJF,WACT,IAAMjC,EAAWC,cADFC,EAKaC,mBAAS,IALtBC,EAAAZ,OAAAa,EAAA,EAAAb,CAAAU,EAAA,GAKRX,EALQa,EAAA,GAKA8B,EALA9B,EAAA,GAOTI,EAAkBC,KAAKC,MAAMC,aAAaC,QAJ1B,eAIqD,EAP5DC,EAQiBV,mBAASK,GAR1BM,EAAAtB,OAAAa,EAAA,EAAAb,CAAAqB,EAAA,GAQRE,EARQD,EAAA,GAQEE,EARFF,EAAA,GASTqB,EAAeC,mBAmDrB,SAASC,EAASC,GACd,IAAMxE,EAAOqE,EAAaI,QAAQC,MACtB,KAAT1E,IAGHoE,EAAU,SAAAO,GACN,SAAA5E,OAAA2B,OAAA4B,EAAA,EAAA5B,CAAWiD,GAAX,CAAuB,CAAEpE,GAAIqE,cAAU5E,KAAMA,EAAMU,SAAS,OAEhE2D,EAAaI,QAAQC,MAAQ,MA6BjC,OAtFAvB,oBAAU,WACN,IAAM0B,EAAelC,KAAKC,MAAMC,aAAaC,QAVvB,qBAWlB+B,GACAT,EAAU,SAAAO,GAAU,SAAA5E,OAAA2B,OAAA4B,EAAA,EAAA5B,CAAQiD,GAARjD,OAAA4B,EAAA,EAAA5B,CAAuBmD,OAEhD,IAEH1B,oBAAU,WACNN,aAAaU,QAjBS,mBAiBkBZ,KAAKa,UAAU/B,KACxD,CAACA,IAGJ0B,oBAAU,WACN,IAAM2B,EAAiB,SAAAC,GACH,UAAdA,EAAM/C,MACR+C,EAAMC,iBAGNT,MAMJ,OAFAd,SAASwB,iBAAiB,UAAWH,GAE9B,WACLrB,SAASyB,oBAAoB,UAAWJ,KAE3C,IAEH3B,oBAAU,WAQN,OANAM,SAASC,KAAKtD,MAAMe,gBAAkB8B,EAAW,UAAY,UAG7DJ,aAAaU,QA1CK,WA0CkBZ,KAAKa,UAAUP,IAG5C,WACHQ,SAASC,KAAKtD,MAAMe,gBAAkB,KAE3C,CAAC8B,IA+CAhD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiF,SAAA,KACIlF,EAAAC,EAAAC,cAAA,MAAIwD,UAAS,WAAA5D,OAAakD,EAAW,eAAiB,kBAAtD,eACAhD,EAAAC,EAAAC,cAAA,UAAQwD,UAAU,iBAAiB5C,QAP3C,WACImC,EAAY,SAAAU,GAAY,OAAKA,MAMzB,oBAGA3D,EAAAC,EAAAC,cAAA,OAAKwD,UAAS,sBAAA5D,OAAwBkD,EAAW,YAAc,eAC3DhD,EAAAC,EAAAC,cAACqB,EAAD,CACImC,UAAU,YACVlC,OAAQA,EACR7B,cAtDhB,SAAuBW,GACnB,IAAM6E,EAAS1D,OAAA4B,EAAA,EAAA5B,CAAOD,GAChB9B,EAAQyF,EAAUtB,KAAK,SAAAnE,GAAK,OAAIA,EAAMY,KAAOA,IACnDZ,EAAMe,SAAWf,EAAMe,QACvB0D,EAAUgB,IAmDEvF,YArChB,SAAqBU,GACjB,IAAM6E,EAAY3D,EAAOsC,OAAO,SAACpE,GAAD,OAAWA,EAAMY,KAAOA,IACxD6D,EAAUgB,OAsCNnF,EAAAC,EAAAC,cAAA,OAAKwD,UAAS,mBAAA5D,OAAqBkD,EAAW,cAAgB,iBAC1DhD,EAAAC,EAAAC,cAAA,SACIwD,UAAU,YACV0B,IAAKhB,EACL7D,KAAK,OACL8E,YAAY,qBAGhBrF,EAAAC,EAAAC,cAAA,UAAQ6D,MAAM,qBAAqBjD,QAASwD,GACxCtE,EAAAC,EAAAC,cAAA,QAAM6D,MAAM,qBACZ/D,EAAAC,EAAAC,cAAA,QAAM6D,MAAM,mBACZ/D,EAAAC,EAAAC,cAAA,QAAM6D,MAAM,wBAAZ,cAIJ/D,EAAAC,EAAAC,cAAA,UAAQ6D,MAAM,qBAAqBjD,QAAS,kBAAImB,EAAS,iBACrDjC,EAAAC,EAAAC,cAAA,QAAM6D,MAAM,qBACZ/D,EAAAC,EAAAC,cAAA,QAAM6D,MAAM,mBACZ/D,EAAAC,EAAAC,cAAA,QAAM6D,MAAM,wBAAZ,oBAIJ/D,EAAAC,EAAAC,cAAA,UAAQ6D,MAAM,qBAAqBjD,QAzD/C,WACI,IAAMqE,EAAY3D,EAAOsC,OAAO,SAAApE,GAAK,OAAKA,EAAMe,UAC1C6E,EAAgB9D,EAAOsC,OAAO,SAAApE,GAAK,OAAIA,EAAMe,UAG7C8E,EAA0B7C,KAAKC,MAAMC,aAAaC,QAAQ,qBAAuB,GAGjF2C,EAAsB,GAAA1F,OAAA2B,OAAA4B,EAAA,EAAA5B,CAAO8D,GAAP9D,OAAA4B,EAAA,EAAA5B,CAAmC6D,IAG/D1C,aAAaU,QAAQ,kBAAmBZ,KAAKa,UAAUiC,IAGvDrB,EAAUgB,KA4CEnF,EAAAC,EAAAC,cAAA,QAAM6D,MAAM,qBACZ/D,EAAAC,EAAAC,cAAA,QAAM6D,MAAM,mBACZ/D,EAAAC,EAAAC,cAAA,QAAM6D,MAAM,wBAAZ,mCAIJ/D,EAAAC,EAAAC,cAAA,OAAKwD,UAAU,aAAalC,EAAOsC,OAAO,SAAApE,GAAK,OAAKA,EAAMe,UAASkB,OAAnE,IAA4EH,EAAOsC,OAAO,SAAApE,GAAK,OAAIA,EAAMe,UAASkB,OAASH,EAAOsC,OAAO,SAAApE,GAAK,OAAKA,EAAMe,UAASkB,OAAlK,qBCxHD8D,MAlBf,WAEE,OACIzF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiF,SAAA,KACElF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,QAAMH,KAAK,WAAW2F,QAAQ,2CAEhC1F,EAAAC,EAAAC,cAACyF,EAAA,EAAD,KACE3F,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,KACE5F,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,QAAU/F,EAAAC,EAAAC,cAAC8F,EAAD,QAChChG,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,cAAcC,QAAU/F,EAAAC,EAAAC,cAAC+F,EAAD,QAC1CjG,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,QAAU/F,EAAAC,EAAAC,cAACgG,EAAD,YCfrCC,IAASC,WAAW5C,SAAS6C,eAAe,SACpDC,OACHtG,EAAAC,EAAAC,cAACF,EAAAC,EAAMsG,WAAP,KACIvG,EAAAC,EAAAC,cAACsG,EAAD","file":"static/js/main.75b2b544.chunk.js","sourcesContent":["import React from 'react'\r\nimport './styling.css'\r\n\r\nexport default function Movie({ movie, toggleWatched, removeMovie }) {\r\n    function handleMovieClick() {\r\n        toggleWatched(movie.id)\r\n    }\r\n\r\n    function handleRemoveClick() {\r\n        try {\r\n            removeMovie(movie.id);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    // Concatenate the search term url for each movie\r\n    let baseGoogle = 'http://www.google.com/search?q=';\r\n    let url = baseGoogle.concat(movie.name, \" movie\");\r\n  \r\n    return (\r\n    <div style={{display: 'flex', justifyContent: 'center'}}>\r\n        <label id='movieInList'>\r\n            <input \r\n                id='movieInList' \r\n                type=\"checkbox\" \r\n                checked={movie.watched} \r\n                onChange={handleMovieClick} \r\n            />\r\n            <a \r\n                href={url} \r\n                target='_blank' \r\n                rel=\"noopener noreferrer\">\r\n                    {movie.name}\r\n            </a>\r\n            <button\r\n                onClick={handleRemoveClick}\r\n                style={{\r\n                    backgroundColor: 'red',\r\n                    color: 'white',\r\n                    border: 'none',\r\n                    cursor: 'pointer',\r\n                    marginLeft: '10px'\r\n                }}\r\n            >\r\n                X\r\n            </button>\r\n        </label>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport Movie from './Movie'\r\nimport './styling.css'\r\n\r\nexport default function WatchList({ movies, toggleWatched, removeMovie }) {\r\n  //If no movies are in the list then display the message\r\n  if(Object.keys(movies).length === 0) {\r\n    return (\r\n      <div \r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        fontSize: 30\r\n        }}\r\n      >\r\n        Add a movie to start your list\r\n        <br />\r\n        <br />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    movies.map(movie => {\r\n        return <Movie \r\n          key={movie.id}\r\n          toggleWatched={toggleWatched}\r\n          removeMovie={removeMovie}\r\n          movie={movie}\r\n        />\r\n    })\r\n  )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport './styling.css'\r\nimport WatchList from './WatchList';\r\n\r\nconst Collection = () => {\r\n  const navigate = useNavigate();\r\n  const DARK_MODE_KEY = 'darkMode';\r\n\r\n  const [collectedMovies, setCollectedMovies] = useState([]);\r\n  const initialDarkMode = JSON.parse(localStorage.getItem(DARK_MODE_KEY)) || false;\r\n  const [darkMode, setDarkMode] = useState(initialDarkMode);\r\n\r\n  useEffect(() => {\r\n    const collectedMovieList = JSON.parse(localStorage.getItem(\"collectedMovies\"))\r\n    if (collectedMovieList) setCollectedMovies(prevCollectedMovies => [...prevCollectedMovies, ...collectedMovieList])\r\n\r\n    // Load dark mode state from local storage\r\n    const initialDarkMode = JSON.parse(localStorage.getItem(DARK_MODE_KEY)) || false;\r\n    setDarkMode(initialDarkMode);\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"collectedMovies\", JSON.stringify(collectedMovies))\r\n  }, [collectedMovies])\r\n\r\n  useEffect(() => {\r\n    document.body.style.backgroundColor = darkMode ? '#282828' : '#f2f3f4';\r\n\r\n    // Save dark mode state to localStorage whenever it changes\r\n    localStorage.setItem(DARK_MODE_KEY, JSON.stringify(darkMode));\r\n\r\n    // Cleanup: reset body background color when component unmounts\r\n    return () => {\r\n      document.body.style.backgroundColor = '';\r\n    };\r\n  }, [darkMode]);\r\n\r\n  function toggleClicked(id) {\r\n    const newCollection = [...collectedMovies]\r\n    const movie = newCollection.find(movie => movie.id === id)\r\n    movie.watched = !movie.watched\r\n    setCollectedMovies(newCollection)\r\n  }\r\n\r\n  function removeMovie(id) {\r\n    const newCollection = collectedMovies.filter((movie) => movie.id !== id);\r\n    setCollectedMovies(newCollection);\r\n  }\r\n\r\n  function toggleDarkMode() {\r\n    setDarkMode(prevDarkMode => !prevDarkMode);\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n        <h1 className={`${darkMode ? 'dark-heading' : 'light-heading'}`}> Your Collection </h1>\r\n        <button className=\"darkModeButton\" onClick={toggleDarkMode}>\r\n          Toggle Dark Mode\r\n        </button>\r\n        <div className={`${darkMode ? 'totalWatched-dark' : 'totalWatched-light'}`}>{collectedMovies.length} Movies Watched</div>\r\n        <div className={`movieListContainer ${darkMode ? 'dark-mode' : 'light-mode'}`}>\r\n          {\r\n            <WatchList\r\n              className=\"movieList\"\r\n              movies={collectedMovies}\r\n              toggleWatched={toggleClicked}\r\n              removeMovie={removeMovie}\r\n            >\r\n            </WatchList>\r\n          }\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <button class=\"button-82-pushable\" onClick={()=>navigate('/prompt')}>\r\n            <span class=\"button-82-shadow\"></span>\r\n            <span class=\"button-82-edge\"></span>\r\n            <span class=\"button-82-front text\">\r\n                Clear Entire Collection\r\n            </span>\r\n        </button>\r\n        <button class=\"button-82-pushable\" onClick={()=>navigate('/')}>\r\n            <span class=\"button-82-shadow\"></span>\r\n            <span class=\"button-82-edge\"></span>\r\n            <span class=\"button-82-front text\">\r\n                Back\r\n            </span>\r\n        </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Collection;","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport './styling.css'\r\n\r\nconst CollectionClearPage = () => {\r\n    const navigate = useNavigate();\r\n    const DARK_MODE_KEY = 'darkMode';\r\n\r\n    const initialDarkMode = JSON.parse(localStorage.getItem(DARK_MODE_KEY)) || false;\r\n    // Not modified from this page so don't need setDarkMode\r\n    const [darkMode] = useState(initialDarkMode);\r\n\r\n    useEffect(() => {\r\n        // Update body background color if dark mode\r\n        document.body.style.backgroundColor = darkMode ? '#282828' : '#f2f3f4';\r\n\r\n        // Save dark mode state to localStorage whenever it changes\r\n        localStorage.setItem(DARK_MODE_KEY, JSON.stringify(darkMode));\r\n\r\n        // Cleanup: reset body background color when component unmounts\r\n        return () => {\r\n            document.body.style.backgroundColor = '';\r\n        };\r\n    }, [darkMode]);\r\n\r\n    function clearCollection() {\r\n        // Clear all collected movies from local storage\r\n        localStorage.removeItem(\"collectedMovies\");\r\n        navigate('/collection');\r\n    }\r\n\r\n    function justGoBack() {\r\n        navigate('/collection');\r\n    }\r\n\r\n    return (\r\n        <div className={`promptPage ${darkMode ? 'promptPage-dark' : 'promptPage-light'}`}>\r\n            <h2> Are you sure you want to clear your collection? </h2>\r\n            <button class=\"button-82-pushable\" onClick={clearCollection}>\r\n                <span class=\"button-82-shadow\"></span>\r\n                <span class=\"button-82-edge\"></span>\r\n                <span class=\"button-82-front text\">\r\n                    Yes\r\n                </span>\r\n            </button>\r\n            <button class=\"button-82-pushable\" onClick={justGoBack}>\r\n                <span class=\"button-82-shadow\"></span>\r\n                <span class=\"button-82-edge\"></span>\r\n                <span class=\"button-82-front text\">\r\n                    No\r\n                </span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CollectionClearPage;","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport WatchList from \"./WatchList\";\r\nimport { v4 as uuidv4 } from 'uuid'; // Allows for random key generation\r\nimport './styling.css'\r\n\r\nconst Home = () => {\r\n    const navigate = useNavigate();\r\n    const LOCAL_STORAGE_KEY = 'watchList.movies';\r\n    const DARK_MODE_KEY = 'darkMode';\r\n\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    const initialDarkMode = JSON.parse(localStorage.getItem(DARK_MODE_KEY)) || false;\r\n    const [darkMode, setDarkMode] = useState(initialDarkMode);\r\n    const movieNameRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const storedMovies = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\r\n        if (storedMovies) {\r\n            setMovies(prevMovies => [...prevMovies, ...storedMovies])\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(movies))\r\n    }, [movies])\r\n\r\n    //Allow for enter key to add a movie to the list\r\n    useEffect(() => {\r\n        const keyDownHandler = event => {\r\n          if (event.key === 'Enter') {\r\n            event.preventDefault();\r\n    \r\n            // 👇️ add the movie\r\n            addMovie();\r\n          }\r\n        };\r\n    \r\n        document.addEventListener('keydown', keyDownHandler);\r\n    \r\n        return () => {\r\n          document.removeEventListener('keydown', keyDownHandler);\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Update body background color if dark mode\r\n        document.body.style.backgroundColor = darkMode ? '#282828' : '#f2f3f4';\r\n\r\n        // Save dark mode state to localStorage whenever it changes\r\n        localStorage.setItem(DARK_MODE_KEY, JSON.stringify(darkMode));\r\n\r\n        // Cleanup: reset body background color when component unmounts\r\n        return () => {\r\n            document.body.style.backgroundColor = '';\r\n        };\r\n    }, [darkMode]);\r\n\r\n    function toggleWatched(id) {\r\n        const newMovies = [...movies]\r\n        const movie = newMovies.find(movie => movie.id === id)\r\n        movie.watched = !movie.watched\r\n        setMovies(newMovies)\r\n    }\r\n\r\n    function addMovie(e) {\r\n        const name = movieNameRef.current.value\r\n        if(name === '') {\r\n            return\r\n        }\r\n        setMovies(prevMovies => {\r\n            return [...prevMovies, { id: uuidv4(), name: name, watched: false}]\r\n        })\r\n        movieNameRef.current.value = null\r\n    }\r\n\r\n    function removeMovie(id) {\r\n        const newMovies = movies.filter((movie) => movie.id !== id);\r\n        setMovies(newMovies);\r\n    }\r\n\r\n    function handleClearList() {\r\n        const newMovies = movies.filter(movie => !movie.watched);\r\n        const watchedMovies = movies.filter(movie => movie.watched);\r\n    \r\n        // Get existing collectedMovies from local storage\r\n        const existingCollectedMovies = JSON.parse(localStorage.getItem(\"collectedMovies\")) || [];\r\n    \r\n        // Concatenate the new watched movies with the existing collection\r\n        const updatedCollectedMovies = [...existingCollectedMovies, ...watchedMovies];\r\n    \r\n        // Update local storage with the updated collection\r\n        localStorage.setItem(\"collectedMovies\", JSON.stringify(updatedCollectedMovies));\r\n    \r\n        // Update state with the remaining unwatched movies\r\n        setMovies(newMovies);\r\n    }\r\n\r\n    function toggleDarkMode() {\r\n        setDarkMode(prevDarkMode => !prevDarkMode);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 className={`heading ${darkMode ? 'dark-heading' : 'light-heading'}`}> MovieSafe </h1>\r\n            <button className=\"darkModeButton\" onClick={toggleDarkMode}>\r\n                Toggle Dark Mode\r\n            </button>\r\n            <div className={`movieListContainer ${darkMode ? 'dark-mode' : 'light-mode'}`}>\r\n                <WatchList\r\n                    className=\"movieList\"\r\n                    movies={movies}\r\n                    toggleWatched={toggleWatched}\r\n                    removeMovie={removeMovie}\r\n                />\r\n            </div>\r\n            <div className={`bottomContainer ${darkMode ? 'dark-bottom' : 'light-bottom'}`}>\r\n                <input \r\n                    className=\"movieList\"\r\n                    ref={movieNameRef} \r\n                    type=\"text\" \r\n                    placeholder=\"Enter movie name\"\r\n                />\r\n                {/* Add the buttons */}\r\n                <button class=\"button-82-pushable\" onClick={addMovie}>\r\n                    <span class=\"button-82-shadow\"></span>\r\n                    <span class=\"button-82-edge\"></span>\r\n                    <span class=\"button-82-front text\">\r\n                        Add Movie\r\n                    </span>\r\n                </button>\r\n                <button class=\"button-82-pushable\" onClick={()=>navigate(\"/collection\")}>\r\n                    <span class=\"button-82-shadow\"></span>\r\n                    <span class=\"button-82-edge\"></span>\r\n                    <span class=\"button-82-front text\">\r\n                        Your Collection\r\n                    </span>\r\n                </button>\r\n                <button class=\"button-82-pushable\" onClick={handleClearList}>\r\n                    <span class=\"button-82-shadow\"></span>\r\n                    <span class=\"button-82-edge\"></span>\r\n                    <span class=\"button-82-front text\">\r\n                        Move Watched → Collection\r\n                    </span>\r\n                </button>\r\n                <div className=\"movieList\">{movies.filter(movie => !movie.watched).length}/{movies.filter(movie => movie.watched).length + movies.filter(movie => !movie.watched).length} left to watch</div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport { HashRouter as BrowserRouter, Routes, Route } from 'react-router-dom';\r\nimport Collection from \"./components/Collection\";\r\nimport CollectionClearPage from \"./components/CollectionClearPage\";\r\nimport Home from \"./components/Home\";\r\n\r\n// TODO: Set up backend to scale\r\n\r\nfunction App() {\r\n\r\n  return (\r\n      <>\r\n        <head>\r\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"></meta>\r\n        </head>\r\n        <BrowserRouter>\r\n          <Routes>\r\n            <Route exact path=\"/\" element={ <Home/> } />\r\n            <Route exact path=\"/collection\" element={ <Collection/> } />\r\n            <Route exact path=\"/prompt\" element={ <CollectionClearPage/> } />\r\n          </Routes>\r\n        </BrowserRouter>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>\r\n);"],"sourceRoot":""}